{"version":3,"file":"static/js/503.14c8315a.chunk.js","mappings":"+SAEMA,EAAG,gCACHC,EAAG,mCAGIC,EAAgB,mCAAG,+FACxBC,EADwB,UACfH,EADe,oCACgBC,GADhB,kBAILG,EAAAA,EAAAA,IAAUD,GAJL,UAItBE,EAJsB,OAMtBC,EAASD,EAASE,KAAKC,QAAQC,KAAI,SAAAC,GACvC,MAAO,CACLC,GAAID,EAAOC,GACXC,MAAOF,EAAOE,MACdC,KAAMH,EAAOG,KAEhB,IAEuB,MAApBR,EAASS,OAde,yCAenBR,GAfmB,kFAkBrBS,QAAQC,OAAO,IAAIC,MAAM,iCAlBJ,0DAAH,qDAsBhBC,EAAY,mCAAG,WAAMC,GAAN,kFACpBhB,EADoB,UACXH,EADW,gCACgBC,EADhB,iCAC4CkB,EAD5C,iDAIDf,EAAAA,EAAAA,IAAUD,GAJT,UAIlBE,EAJkB,OAKlBC,EAASD,EAASE,KAAKC,QAAQC,KAAI,SAAAC,GACvC,MAAO,CACLC,GAAID,EAAOC,GACXC,MAAOF,EAAOE,MAEjB,IAEuB,MAApBP,EAASS,OAZW,yCAafR,GAbe,kFAgBjBS,QAAQC,OAAO,IAAIC,MAAM,iCAhBR,0DAAH,sDAoBZG,EAAe,mCAAG,WAAMC,GAAN,kFACvBlB,EADuB,UACdH,EADc,iBACFqB,EADE,oBACiBpB,EADjB,qCAIJG,EAAAA,EAAAA,IAAUD,GAJN,UAIrBE,EAJqB,OAMrBiB,EAAQjB,EAASE,KAEC,MAApBF,EAASS,OARc,yCASlBQ,GATkB,kFAYpBP,QAAQC,OAAO,IAAIC,MAAM,+BAZL,0DAAH,sDAgBfM,EAAa,mCAAG,WAAMC,GAAN,kFACrBrB,EADqB,UACZH,EADY,iBACAwB,EADA,4BAC2BvB,EAD3B,qCAGFG,EAAAA,EAAAA,IAAUD,GAHR,UAGnBE,EAHmB,OAKnBoB,EAAOpB,EAASE,KAAKkB,KAAKhB,KAAI,SAAAiB,GAClC,MAAO,CACLf,GAAIe,EAAMf,GACVE,KAAMa,EAAMb,KACZc,IAAKD,EAAME,aACXC,UAAWH,EAAMG,UAEpB,IACuB,MAApBxB,EAASS,OAbY,yCAchBW,GAdgB,kFAiBlBV,QAAQC,OAAO,IAAIC,MAAM,+BAjBP,0DAAH,sDAqBba,EAAU,mCAAG,WAAMN,GAAN,kFAClBrB,EADkB,UACTH,EADS,iBACGwB,EADH,4BAC8BvB,EAD9B,4CAICG,EAAAA,EAAAA,IAAUD,GAJX,UAIhBE,EAJgB,OAKhB0B,EAAU1B,EAASE,KAAKC,QAAQC,KAAI,SAAAC,GACxC,MAAO,CACLC,GAAID,EAAOC,GACXR,IAAKO,EAAOP,IACZ6B,OAAQtB,EAAOsB,OACfC,QAASvB,EAAOuB,QAEnB,IACuB,MAApB5B,EAASS,OAbS,yCAcbiB,GAda,kFAiBfhB,QAAQC,OAAO,IAAIC,MAAM,+BAjBV,0DAAH,qD,oHCjFR,SAASiB,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQb,GAAYc,EAAAA,EAAAA,MAAZd,SAERe,EAAAA,EAAAA,YAAU,YACRhB,EAAAA,EAAAA,IAAcC,GAASgB,MAAK,SAAAC,GAAM,OAAIJ,EAAWI,EAAf,GACnC,GAAE,CAACjB,IAGJ,OACE,0BACE,wBACGY,EAAQ3B,KAAI,SAAAiC,GAAI,OACf,2BACE,gBACEC,IACED,EAAKf,IAAL,UATD,mCASC,OACce,EAAKf,KADnB,sCAIFiB,IAAI,GACJC,OAAQ,QACRC,MAAO,WAGT,uBAAIJ,EAAK7B,QACT,sCAAc6B,EAAKb,eAbZa,EAAK/B,GADC,OAoBxB,C","sources":["API.js","components/Credits/Credits.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = `https://api.themoviedb.org/3/`;\nconst key = `b4e7b15a3300b6cccec91fe70cf6dc81`;\n// const language = ``;\n\nexport const fetchTrendMovies = async () => {\n  const url = `${api}trending/all/day?api_key=${key}`;\n\n  try {\n    const response = await axios.get(url);\n\n    const movies = response.data.results.map(result => {\n      return {\n        id: result.id,\n        title: result.title,\n        name: result.name,\n      };\n    });\n\n    if (response.status === 200) {\n      return movies;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('Sorry something go wrong ;('));\n  }\n};\n\nexport const searchMovies = async inputSearch => {\n  const url = `${api}search/movie?api_key=${key}&language=en-US&query=${inputSearch}&page=1&include_adult=false`;\n\n  try {\n    const response = await axios.get(url);\n    const movies = response.data.results.map(result => {\n      return {\n        id: result.id,\n        title: result.title,\n      };\n    });\n\n    if (response.status === 200) {\n      return movies;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('Sorry something go wrong ;('));\n  }\n};\n\nexport const searchMovieInfo = async inputId => {\n  const url = `${api}movie/${inputId}?api_key=${key}&language=en-US`;\n\n  try {\n    const response = await axios.get(url);\n\n    const movie = response.data;\n\n    if (response.status === 200) {\n      return movie;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('Sorry something go wrong '));\n  }\n};\n\nexport const searchCredits = async movieId => {\n  const url = `${api}movie/${movieId}/credits?api_key=${key}&language=en-US`;\n  try {\n    const response = await axios.get(url);\n\n    const cast = response.data.cast.map(actor => {\n      return {\n        id: actor.id,\n        name: actor.name,\n        img: actor.profile_path,\n        character: actor.character,\n      };\n    });\n    if (response.status === 200) {\n      return cast;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('Sorry something go wrong '));\n  }\n};\n\nexport const getReviews = async movieId => {\n  const url = `${api}movie/${movieId}/reviews?api_key=${key}&language=en-US&page=1`;\n\n  try {\n    const response = await axios.get(url);\n    const reviews = response.data.results.map(result => {\n      return {\n        id: result.id,\n        url: result.url,\n        author: result.author,\n        content: result.content,\n      };\n    });\n    if (response.status === 200) {\n      return reviews;\n    }\n  } catch (error) {\n    return Promise.reject(new Error('Sorry something go wrong '));\n  }\n};\n","import { searchCredits } from 'API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function Credits() {\n  const [credits, setCredits] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    searchCredits(movieId).then(credit => setCredits(credit));\n  }, [movieId]);\n  const tmdb = 'https://image.tmdb.org/t/p/w500';\n\n  return (\n    <div>\n      <ul>\n        {credits.map(item => (\n          <li key={item.id}>\n            <img\n              src={\n                item.img\n                  ? `${tmdb}${item.img}`\n                  : `https://via.placeholder.com/150x100`\n              }\n              alt=\"\"\n              height={'150px'}\n              width={'100px'}\n            ></img>\n\n            <p>{item.name}</p>\n            <p>Character:{item.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":["api","key","fetchTrendMovies","url","axios","response","movies","data","results","map","result","id","title","name","status","Promise","reject","Error","searchMovies","inputSearch","searchMovieInfo","inputId","movie","searchCredits","movieId","cast","actor","img","profile_path","character","getReviews","reviews","author","content","Credits","useState","credits","setCredits","useParams","useEffect","then","credit","item","src","alt","height","width"],"sourceRoot":""}